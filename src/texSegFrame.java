
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.awt.image.renderable.RenderableImage;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ssd
 */
public class texSegFrame extends javax.swing.JFrame {
//http://matlabserver.cs.rug.nl/edgedetectionweb/web/edgedetection_params.html
    /**
     * Creates new form texSegFrame
     */
    int wavelength,height,width;
    double orientations[],offset,bandwidth,aspectratio;
    BufferedImage output;
    Boolean Active;
    
    
    public texSegFrame() {
        initComponents();
        texsrc.setIcon(Utilities.getScaledIcon(texsrc, MainSegFrame.image));
        Active=false;
        jradiobutton2.setSelected(true);
        jTextField1.setEditable(false);
        wave.setText(""+5); 
        orien.setText(""+60);
        off.setText(""+0);
        band.setText(""+60);
        ar.setText(""+5);
        heit.setText(""+3);
        wid.setText(""+3);
        output=getTextureImage();
        texdest.setIcon(Utilities.getScaledIcon(texdest, output));
         }
    
   private BufferedImage getTextureImage(){
      BufferedImage input=Utilities.getImageCopy(MainSegFrame.image);
     
      height=Integer.parseInt(heit.getText());
      width=Integer.parseInt(wid.getText());
      wavelength=waveslider.getValue();
      offset=Utilities.getRadian(offsetslider.getValue());
      bandwidth=Utilities.getRadian(bandslider.getValue());
      aspectratio=arslider.getValue()/10;
      
      if(jradioButton1.isSelected()==true){
          int count=Integer.parseInt(jTextField1.getText());
          orientations=new double[count+1];
          orientations[0]=0;
          double incr=Math.PI/count;
          for(int i=1;i<count+1;i++){
              orientations[i]=orientations[i]+incr;
          }
      } 
      else{
          orientations=new double[3];
          double val=Utilities.getRadian(orienslider.getValue());
          orientations[0]=0;
          orientations[0]=val;
          orientations[0]=Math.PI;
      }
      
      
    return Utilities.convertRenderedImage(new GaborTextureSegmentation(wavelength, orientations, offset, aspectratio, bandwidth, width, height).filter(input, null));
   }
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jradioButton1 = new javax.swing.JRadioButton();
        jradiobutton2 = new javax.swing.JRadioButton();
        waveslider = new javax.swing.JSlider();
        save = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        wave = new javax.swing.JTextField();
        texsrc = new javax.swing.JLabel();
        texdest = new javax.swing.JLabel();
        orienslider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        orien = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        off = new javax.swing.JTextField();
        offsetslider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        band = new javax.swing.JTextField();
        bandslider = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        ar = new javax.swing.JTextField();
        arslider = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        heit = new javax.swing.JTextField();
        wid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Texture Segmentation\n");
        setMinimumSize(new java.awt.Dimension(900, 1100));
        setPreferredSize(new java.awt.Dimension(900, 1100));
        getContentPane().setLayout(null);

        jLabel1.setText("Mutliple Orientations");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(590, 320, 130, 20);

        buttonGroup1.add(jradioButton1);
        jradioButton1.setText("Enable");
        jradioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jradioButton1);
        jradioButton1.setBounds(590, 350, 80, 30);

        buttonGroup1.add(jradiobutton2);
        jradiobutton2.setText("Disable");
        jradiobutton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradiobutton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jradiobutton2);
        jradiobutton2.setBounds(590, 380, 80, 30);

        waveslider.setMajorTickSpacing(20);
        waveslider.setMaximum(255
        );
        waveslider.setMinimum(2
        );
        waveslider.setMinorTickSpacing(5);
        waveslider.setPaintLabels(true);
        waveslider.setPaintTicks(true);
        waveslider.setSnapToTicks(true);
        waveslider.setValue(5);
        waveslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                wavesliderStateChanged(evt);
            }
        });
        getContentPane().add(waveslider);
        waveslider.setBounds(70, 280, 450, 50);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(677, 650, 90, 23);

        jLabel2.setText("Wavelength");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(210, 250, 130, 14);

        wave.setEditable(false);
        getContentPane().add(wave);
        wave.setBounds(320, 250, 50, 20);

        texsrc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(texsrc);
        texsrc.setBounds(60, 40, 310, 180);

        texdest.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(texdest);
        texdest.setBounds(450, 40, 300, 180);

        orienslider.setMajorTickSpacing(20);
        orienslider.setMaximum(180
        );
        orienslider.setMinimum(0
        );
        orienslider.setMinorTickSpacing(10);
        orienslider.setPaintLabels(true);
        orienslider.setPaintTicks(true);
        orienslider.setSnapToTicks(true);
        orienslider.setValue(60);
        orienslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                oriensliderStateChanged(evt);
            }
        });
        getContentPane().add(orienslider);
        orienslider.setBounds(70, 360, 460, 60);

        jLabel3.setText("Orientation");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(210, 330, 100, 14);

        orien.setEditable(false);
        getContentPane().add(orien);
        orien.setBounds(320, 330, 50, 20);

        jTextField1.setText("Orientations");
        getContentPane().add(jTextField1);
        jTextField1.setBounds(590, 420, 80, 20);

        jLabel5.setText("Offset");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(220, 420, 50, 14);

        off.setEditable(false);
        off.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offActionPerformed(evt);
            }
        });
        getContentPane().add(off);
        off.setBounds(320, 420, 50, 20);

        offsetslider.setMajorTickSpacing(30);
        offsetslider.setMaximum(180);
        offsetslider.setMinimum(-180);
        offsetslider.setMinorTickSpacing(10
        );
        offsetslider.setPaintLabels(true);
        offsetslider.setPaintTicks(true);
        offsetslider.setSnapToTicks(true);
        offsetslider.setValue(0);
        offsetslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                offsetsliderStateChanged(evt);
            }
        });
        getContentPane().add(offsetslider);
        offsetslider.setBounds(80, 440, 450, 60);

        jLabel4.setText("Bandwidth");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(220, 510, 60, 14);

        band.setEditable(false);
        getContentPane().add(band);
        band.setBounds(320, 510, 50, 20);

        bandslider.setMajorTickSpacing(10);
        bandslider.setMaximum(180);
        bandslider.setMinimum(1);
        bandslider.setPaintLabels(true);
        bandslider.setPaintTicks(true);
        bandslider.setSnapToTicks(true);
        bandslider.setValue(60);
        bandslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                bandsliderStateChanged(evt);
            }
        });
        getContentPane().add(bandslider);
        bandslider.setBounds(80, 530, 450, 60);

        jLabel6.setText("Aspect Ratio");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(220, 600, 70, 14);

        ar.setEditable(false);
        getContentPane().add(ar);
        ar.setBounds(320, 600, 50, 20);

        arslider.setMajorTickSpacing(2);
        arslider.setMaximum(10);
        arslider.setMinimum(0);
        arslider.setMinorTickSpacing(1);
        arslider.setPaintLabels(true);
        arslider.setPaintTicks(true);
        arslider.setSnapToTicks(true);
        arslider.setValue(5);
        arslider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                arsliderStateChanged(evt);
            }
        });
        getContentPane().add(arslider);
        arslider.setBounds(80, 640, 380, 50);

        jLabel7.setText("Height");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(590, 470, 50, 14);

        jLabel8.setText("Width");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(590, 500, 60, 14);
        getContentPane().add(heit);
        heit.setBounds(660, 470, 40, 20);
        getContentPane().add(wid);
        wid.setBounds(660, 500, 40, 20);

        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(610, 540, 110, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oriensliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_oriensliderStateChanged
        // TODO add your handling code here:
        if (!orienslider.getValueIsAdjusting()&& Active==false) {
            orien.setText(""+orienslider.getValue());
             output=getTextureImage();
            texdest.setIcon(Utilities.getScaledIcon(texdest, output));
        }
    }//GEN-LAST:event_oriensliderStateChanged

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        FileHandling fh=new FileHandling(this);
        fh.WriteImage(output);
    }//GEN-LAST:event_saveActionPerformed

    private void wavesliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_wavesliderStateChanged

        // TODO add your handling code here:

        if (!waveslider.getValueIsAdjusting() ) {
           wave.setText(""+waveslider.getValue());
            output=getTextureImage();
            texdest.setIcon(Utilities.getScaledIcon(texdest, output));
        }
    }//GEN-LAST:event_wavesliderStateChanged

    private void jradiobutton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradiobutton2ActionPerformed
        // TODO add your handling code here:
     
      orienslider.setEnabled(true);
      Active=false;
      jTextField1.setEditable(false);
      jTextField1.setText("Orientations");
    }//GEN-LAST:event_jradiobutton2ActionPerformed

    private void jradioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioButton1ActionPerformed
        // TODO add your handling code here:
      orienslider.setEnabled(false);
      Active=true;
      jTextField1.setEditable(true);
      jTextField1.setText(""+3);
      
      
    }//GEN-LAST:event_jradioButton1ActionPerformed

    private void offActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_offActionPerformed

    private void offsetsliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_offsetsliderStateChanged
        // TODO add your handling code here:
        if (!offsetslider.getValueIsAdjusting() ) {
            off.setText(""+offsetslider.getValue());
            output=getTextureImage();
            texdest.setIcon(Utilities.getScaledIcon(texdest, output));
        }
    }//GEN-LAST:event_offsetsliderStateChanged

    private void bandsliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_bandsliderStateChanged
        // TODO add your handling code here:
        if (!bandslider.getValueIsAdjusting() ) {
           band.setText(""+bandslider.getValue());
            output=getTextureImage();
            texdest.setIcon(Utilities.getScaledIcon(texdest, output));
        }
    }//GEN-LAST:event_bandsliderStateChanged

    private void arsliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_arsliderStateChanged
        // TODO add your handling code here:
        if (!arslider.getValueIsAdjusting() ) {
           ar.setText(""+arslider.getValue());
            output=getTextureImage();
            texdest.setIcon(Utilities.getScaledIcon(texdest, output));
        }
    }//GEN-LAST:event_arsliderStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        output=getTextureImage();
        texdest.setIcon(Utilities.getScaledIcon(texdest, output));
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(texSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(texSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(texSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(texSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new texSegFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ar;
    private javax.swing.JSlider arslider;
    private javax.swing.JTextField band;
    private javax.swing.JSlider bandslider;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField heit;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton jradioButton1;
    private javax.swing.JRadioButton jradiobutton2;
    private javax.swing.JTextField off;
    private javax.swing.JSlider offsetslider;
    private javax.swing.JTextField orien;
    private javax.swing.JSlider orienslider;
    private javax.swing.JButton save;
    private javax.swing.JLabel texdest;
    private javax.swing.JLabel texsrc;
    private javax.swing.JTextField wave;
    private javax.swing.JSlider waveslider;
    private javax.swing.JTextField wid;
    // End of variables declaration//GEN-END:variables
}
