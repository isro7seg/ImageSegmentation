
import java.awt.image.BufferedImage;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ssd
 */
public class watershedSegFrame extends javax.swing.JFrame {

    int windowWidth,floodpts,conpix;
    BufferedImage output;
        boolean Active;
        WatershedSegmentation wtrshd;
    /**
     * Creates new form watershedSegFrame
     */
        
    
    public watershedSegFrame() {
        initComponents();  
        windowWidth=30;floodpts=30;conpix=8;   
        winwidth.setText(""+windowWidth); 
        fpcount.setText(""+floodpts);
        watersrc.setIcon(Utilities.getScaledIcon(watersrc, MainSegFrame.image));
        
        pix8rb.setSelected(true);
        fpointSlider.setEnabled(false);
        windowSlider.setEnabled(false);
        jradiobutton2.setSelected(true); 
        Active=false;
        
        wtrshd=new WatershedSegmentation();
        output=wtrshd.calculateWatershedImage(Utilities.getImageCopy(MainSegFrame.image), floodpts, windowWidth, conpix);
        waterdest.setIcon(Utilities.getScaledIcon(waterdest, output));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jradioButton1 = new javax.swing.JRadioButton();
        jradiobutton2 = new javax.swing.JRadioButton();
        fpointSlider = new javax.swing.JSlider();
        bedgesave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        fpcount = new javax.swing.JTextField();
        watersrc = new javax.swing.JLabel();
        waterdest = new javax.swing.JLabel();
        windowSlider = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        winwidth = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pix4rb = new javax.swing.JRadioButton();
        pix8rb = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Watershed Segmentation");
        setMinimumSize(new java.awt.Dimension(850, 600));
        setPreferredSize(new java.awt.Dimension(850, 600));
        getContentPane().setLayout(null);

        jLabel1.setText("Threshold");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 360, 80, 16);

        buttonGroup2.add(jradioButton1);
        jradioButton1.setText("Enable");
        jradioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradioButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jradioButton1);
        jradioButton1.setBounds(20, 390, 80, 23);

        buttonGroup2.add(jradiobutton2);
        jradiobutton2.setText("Disable");
        jradiobutton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jradiobutton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jradiobutton2);
        jradiobutton2.setBounds(20, 420, 80, 23);

        fpointSlider.setMajorTickSpacing(40);
        fpointSlider.setMaximum(256);
        fpointSlider.setMinimum(1
        );
        fpointSlider.setMinorTickSpacing(10);
        fpointSlider.setPaintLabels(true);
        fpointSlider.setPaintTicks(true);
        fpointSlider.setSnapToTicks(true);
        fpointSlider.setValue(30);
        fpointSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fpointSliderStateChanged(evt);
            }
        });
        getContentPane().add(fpointSlider);
        fpointSlider.setBounds(170, 340, 450, 50);

        bedgesave.setText("Save");
        bedgesave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bedgesaveActionPerformed(evt);
            }
        });
        getContentPane().add(bedgesave);
        bedgesave.setBounds(670, 390, 57, 23);

        jLabel2.setText("Flood Point Count");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(290, 310, 130, 14);

        fpcount.setEditable(false);
        getContentPane().add(fpcount);
        fpcount.setBounds(420, 310, 50, 20);

        watersrc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(watersrc);
        watersrc.setBounds(60, 40, 310, 180);

        waterdest.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(waterdest);
        waterdest.setBounds(450, 40, 300, 180);

        windowSlider.setMajorTickSpacing(30);
        windowSlider.setMaximum(256
        );
        windowSlider.setMinimum(8
        );
        windowSlider.setMinorTickSpacing(10);
        windowSlider.setPaintLabels(true);
        windowSlider.setPaintTicks(true);
        windowSlider.setSnapToTicks(true);
        windowSlider.setValue(30);
        windowSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                windowSliderStateChanged(evt);
            }
        });
        getContentPane().add(windowSlider);
        windowSlider.setBounds(180, 430, 430, 50);

        jLabel3.setText("Minimum Window Width");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(270, 400, 150, 14);

        winwidth.setEditable(false);
        getContentPane().add(winwidth);
        winwidth.setBounds(420, 400, 50, 20);

        jLabel4.setText("Connected Pixels");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(290, 490, 100, 14);

        buttonGroup1.add(pix4rb);
        pix4rb.setText("4 Pixels");
        pix4rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pix4rbActionPerformed(evt);
            }
        });
        getContentPane().add(pix4rb);
        pix4rb.setBounds(420, 490, 80, 23);

        buttonGroup1.add(pix8rb);
        pix8rb.setText("8 Pixels");
        pix8rb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pix8rbActionPerformed(evt);
            }
        });
        getContentPane().add(pix8rb);
        pix8rb.setBounds(540, 490, 100, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jradioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradioButton1ActionPerformed
        // TODO add your handling code here:
        Active=true;
        fpointSlider.setEnabled(true);
        windowSlider.setEnabled(true);
        pix4rb.setEnabled(true);
        pix8rb.setEnabled(true);
    }//GEN-LAST:event_jradioButton1ActionPerformed

    private void jradiobutton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jradiobutton2ActionPerformed
        // TODO add your handling code here:
      Active=false;
      fpointSlider.setEnabled(false);
      windowSlider.setEnabled(false);
      pix4rb.setEnabled(false);
      pix8rb.setEnabled(false);
    }//GEN-LAST:event_jradiobutton2ActionPerformed

    private void fpointSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fpointSliderStateChanged

        // TODO add your handling code here:
       
        if (!fpointSlider.getValueIsAdjusting() && Active==true) {
            System.out.println("Flood Point="+fpointSlider.getValue());
            floodpts=fpointSlider.getValue();
            fpcount.setText(""+floodpts); 
            wtrshd=new WatershedSegmentation();
           output=wtrshd.calculateWatershedImage(Utilities.getImageCopy(MainSegFrame.image), floodpts, windowWidth, conpix);
            waterdest.setIcon(Utilities.getScaledIcon(waterdest, output));
        }
    }//GEN-LAST:event_fpointSliderStateChanged

    private void bedgesaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bedgesaveActionPerformed
        FileHandling fh=new FileHandling(this);
        fh.WriteImage(output);

    }//GEN-LAST:event_bedgesaveActionPerformed

    private void windowSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_windowSliderStateChanged
        // TODO add your handling code here:
         if (!windowSlider.getValueIsAdjusting()&& Active==true) {
            System.out.println("Window Width="+windowSlider.getValue());
            windowWidth=windowSlider.getValue();
            winwidth.setText(""+windowWidth); 
            wtrshd=new WatershedSegmentation();
            output=wtrshd.calculateWatershedImage(Utilities.getImageCopy(MainSegFrame.image), floodpts, windowWidth, conpix);
            waterdest.setIcon(Utilities.getScaledIcon(waterdest, output));
        }
    }//GEN-LAST:event_windowSliderStateChanged

    private void pix4rbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pix4rbActionPerformed
        // TODO add your handling code here:
        conpix=4;
        wtrshd=new WatershedSegmentation();
        output=wtrshd.calculateWatershedImage(Utilities.getImageCopy(MainSegFrame.image), floodpts, windowWidth, conpix);
        waterdest.setIcon(Utilities.getScaledIcon(waterdest, output));
    }//GEN-LAST:event_pix4rbActionPerformed

    private void pix8rbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pix8rbActionPerformed
        // TODO add your handling code here:
        conpix=8;
        wtrshd=new WatershedSegmentation();
        output=wtrshd.calculateWatershedImage(Utilities.getImageCopy(MainSegFrame.image), floodpts, windowWidth, conpix);
        waterdest.setIcon(Utilities.getScaledIcon(waterdest, output));
    }//GEN-LAST:event_pix8rbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(watershedSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(watershedSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(watershedSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(watershedSegFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new watershedSegFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bedgesave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField fpcount;
    private javax.swing.JSlider fpointSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jradioButton1;
    private javax.swing.JRadioButton jradiobutton2;
    private javax.swing.JRadioButton pix4rb;
    private javax.swing.JRadioButton pix8rb;
    private javax.swing.JLabel waterdest;
    private javax.swing.JLabel watersrc;
    private javax.swing.JSlider windowSlider;
    private javax.swing.JTextField winwidth;
    // End of variables declaration//GEN-END:variables
}
